server:
  port: ${SERVER_PORT_REP:8082}
  forward-headers-strategy: framework

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

spring:
  webflux:
    base-path: /reports
  application:
    name: ${APP_NAME_REP:cleanArchitecture}
  devtools:
    add-properties: false
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:false}
      path: ${H2_CONSOLE_PATH:/h2}
  profiles:
    include: null

management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:4200,http://localhost:8080}

security:
  jwt:
    secret: ${JWT_SECRET:CHANGE_ME_IN_DEV}
    ttl-seconds: ${JWT_TTL_SECONDS:3600}

aws:
  access-key: ${AWS_ACCESS_KEY_ID:dummy}
  secret-key: ${AWS_SECRET_ACCESS_KEY:dummy}
  region: ${AWS_REGION:us-east-1}
  dynamodb:
    endpoint: ${AWS_DYNAMODB_ENDPOINT:}
  sqs:
    report-queue:
      url: ${AWS_SQS_QUEUE_REPORT_URL:dummy}
      is-fifo: true
    task-queue:
      url: ${AWS_SQS_QUEUE_TASK_URL:dummy}

app:
  dynamodb:
    table:
      reporteAprobados: ${DYNAMO_TABLE_REPORTE_APROBADOS:reporte_aprobados}
  scheduling:
    hello-cron: "0 26 19 * * *"   # 2:45 p. m. todos los d√≠as (formato Spring: s m H d M dow)
    zone: "America/Bogota"

sqs:
  incoming:
    poll-interval-ms: ${SQS_INCOMING_POLL_INTERVAL_MS:5000}
    max-messages: ${SQS_INCOMING_MAX_MESSAGES:10}
    wait-seconds: ${SQS_INCOMING_WAIT_SECONDS:10}
    visibility-timeout: ${SQS_INCOMING_VISIBILITY_TIMEOUT:30}
    fifo:
      max-concurrent-groups: ${SQS_INCOMING_FIFO_MAX_CONCURRENT_GROUPS:4}

